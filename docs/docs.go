// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "description": "注册用户，",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户相关接口"
                ],
                "summary": "用户登录接口",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "request_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.LoginResponse"
                        }
                    }
                }
            }
        },
        "/posts/:id": {
            "get": {
                "description": "根据id获取文章，如果为空返回错误",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "文章相关接口"
                ],
                "summary": "根据id获取文章",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "request_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "文章id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Post"
                        }
                    }
                }
            }
        },
        "/posts/create": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "创建文章，返回文章Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "文章相关接口"
                ],
                "summary": "创建文章",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "request_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "创建文章的参数",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreatePostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.CreatePostResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "注册用户，",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户相关接口"
                ],
                "summary": "注册用户",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "request_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.SignupResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                }
            }
        },
        "domain.CreatePostRequest": {
            "type": "object",
            "required": [
                "content",
                "title"
            ],
            "properties": {
                "category": {
                    "$ref": "#/definitions/domain.Category"
                },
                "content": {
                    "type": "string"
                },
                "cover": {
                    "type": "string"
                },
                "subTitle": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "tag": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Tag"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "domain.CreatePostResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "domain.LoginResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "domain.Post": {
            "type": "object",
            "properties": {
                "authorID": {
                    "type": "string"
                },
                "category": {
                    "$ref": "#/definitions/domain.Category"
                },
                "content": {
                    "type": "string"
                },
                "contentHtml": {
                    "type": "string"
                },
                "cover": {
                    "type": "string"
                },
                "draft": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "md5": {
                    "type": "string"
                },
                "subTitle": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Tag"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "domain.SignupResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "domain.Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:8081",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "go_zen blog system API",
	Description:      "IvanApi Service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
